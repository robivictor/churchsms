@model DataModels.Models.User

@{
    ViewBag.Title = "Create";
    //Layout = "~/Views/Shared/_popup_layout.cshtml";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section header {
    @*    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove-circle"></span></button>*@
    <h1>
        <i class="fa fa-plus-circle"></i> Contacts
        <small>Create New </small>
    </h1>
}

@section actions {
    <a class="btn btn-default" href="@Url.Action("Index", "Contacts")"><span class="fa fa-list"></span>&nbsp;Contacts</a>
}


<div ng-app="" class="box box-primary">

    <div class="box-header">

    </div>

    @using (Html.BeginForm())
    {
        <div class="box-body">
            <div ng-controller="ContactsController" class="row center-block">
                <div class="col-md-6 box-content">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, "First Name")
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "First Name", @required = "" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MiddleName, "Middle Name")
                        @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", @placeholder = "Middle Name", @required = "" })
                        @Html.ValidationMessageFor(model => model.MiddleName)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, "Last Name")
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Last Name", @required = "" })
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber,"Phone Number")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-phone"></i>+251
                            </div>
                            @*@Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @placeholder = "Phone Number" })*@
                            @*<input class="form-control" id="PhoneNumber" name="PhoneNumber" placeholder="Phone Number" type="text" value="@Model.PhoneNumber" data-inputmask='"mask": "(999) 999-9999"' data-mask/>*@
                            @*<input type="text" class="form-control" data-inputmask='"mask": "(999) 999-9999"' data-mask />*@

                            @*@if(IsPost)
                                {
                                    <input class="form-control" id="PhoneNumber" required="" name="PhoneNumber" placeholder="Phone Number" type="text" value="@Model.PhoneNumber" data-inputmask='"mask": "(999) 99-9999"' data-mask>
                                }
                                else
                                {*@
                            <input class="form-control" id="PhoneNumber" required="" name="PhoneNumber" placeholder="Phone Number" type="text" >
                            @*}*@

                        </div>
                        <p class="text-orange">Phone number should be like: (935) 93-2263 </p>
                        @Html.ValidationMessageFor(model => model.PhoneNumber)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDate, "Birthdate")
                        <div class='input-group date' id='datetimepicker1'>
                            <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                            @Html.TextBoxFor(model => model.BirthDate, new { @class = "form-control", @placeholder = "Birth Date" })
                        </div>
                        @Html.ValidationMessageFor(model => model.BirthDate)
                    </div>
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Email, "Email")
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Facebook, "Facebook")
                        @Html.TextBoxFor(model => model.Facebook, new { @class = "form-control", @placeholder = "Facbook Link" })
                        @Html.ValidationMessageFor(model => model.Facebook)
                    </div>*@
                </div>
                <div class="col-md-6 box-content">
                    @*<div class="fileinput fileinput-new" data-provides="fileinput">
                            <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;"></div>
                            <div>
                                <span class="btn btn-default btn-file"><span class="fileinput-new">Select image</span><span class="fileinput-exists">Change</span><input type="file" name="..."></span>
                                <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                            </div>
                        </div>*@
                   
                    
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.JoinedDate,"Joined Date")
                        <div class='input-group date' id='datetimepicker2'>
                            <span class="input-group-addon"><span class="fa fa-calendar"></span></span>
                            @Html.TextBoxFor(model => model.JoinedDate, new { @class = "form-control", @placeholder = "Member since" })
                        </div>
                        @Html.ValidationMessageFor(model => model.JoinedDate)
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, "About")
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = "Description", @style = "height: 120px" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReferenceID, "Reference No")
                        @Html.TextBoxFor(model => model.ReferenceID, new { @class = "form-control", @placeholder = "Reference Number"})
                        @Html.ValidationMessageFor(model => model.ReferenceID)
                    </div>
                </div>
                <div class="col-md-12 box-content">
                    <div class="">
                        <div class="pull-right" style="margin:5px">
                            <button type="submit" class="btn btn-primary pull-left"><i class="fa fa-save"></i>Save</button>
                        </div>
                        <div class="pull-right" style="margin:5px">
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(function () {
        $("[data-mask]").inputmask();

    });
</script>
<script>
    function ContactsController($scope) {
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "progressBar": false,
            "positionClass": "toast-bottom-center",
            "onclick": null,
            "showDuration": "200",
            "hideDuration": "500",
            "timeOut": "5000",
            "extendedTimeOut": "100",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        $scope.alert = function () {
            var error = '@ViewBag.Error';

            if (error.toString() != "") {
                toastr.error(error.toString());
            }
        };
        $scope.alert();
    }
</script>
<script type="text/javascript">
    $(function () {
        $('#datetimepicker1').datepicker({
            //format: "dd/mm/yyyy",
            weekStart: 1,
            todayBtn: "linked",
            calendarWeeks: true,
            todayHighlight: true,
            autoclose: true,

        });

        $('#datetimepicker2').datepicker({
            //format: "dd/mm/yyyy",
            weekStart: 1,
            todayBtn: "linked",
            calendarWeeks: true,
            todayHighlight: true,
            autoclose: true,

        });
    });
</script>
